name: CI Flow

on:
  push:

defaults:
  run:
    shell: pwsh

jobs:
  pester:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Pester
        run: Install-Module -Name Pester -Force -SkipPublisherCheck -Scope CurrentUser -MinimumVersion 5.7.1 -ErrorAction Stop

      - name: Run Pester
        id: pester
        run: |
          $config = New-PesterConfiguration
          $config.TestResult.Enabled = $true
          $config.TestResult.OutputFormat = 'NUnitXml'
          $config.TestResult.OutputPath = 'testResults.xml'
          $config.Run.Exit = $true
          $config.CodeCoverage.Enabled = $true
          $config.CodeCoverage.OutputPath = 'coverage.xml'
          Invoke-Pester -Configuration $config

      - name: Upload code coverage report
        if: ${{ steps.pester.outcome == 'success' }}
        uses: actions/upload-artifact@v4
        with:
          path: coverage.xml

      - name: Upload test results
        if: ${{ steps.pester.outcome != 'skipped' }} # run if outcome is success or failure
        uses: actions/upload-artifact@v4
        with:
          path: testResults.xml

  analyze:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Run PSScriptAnalyzer
        run: Invoke-ScriptAnalyzer -Path ./PSModule -Recurse -ReportSummary -Settings PSScriptAnalyzerSettings.psd1
